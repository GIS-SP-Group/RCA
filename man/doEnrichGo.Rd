% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doGoEnrichment.R
\name{doEnrichGo}
\alias{doEnrichGo}
\title{Perform GO enrichment analysis using cluster profiler.}
\usage{
doEnrichGo(
  rca.obj,
  annotation = NULL,
  ontology = "BP",
  p.Val = 0.05,
  q.Val = 0.2,
  p.Adjust.Method = "BH",
  gene.label.type = "SYMBOL",
  filename = "GoEnrichment.pdf",
  background.set = "ALL",
  background.set.threshold = NULL,
  n.Cells.Expressed = NULL,
  cluster.ID = NULL,
  deep.split = NULL
)
}
\arguments{
\item{rca.obj}{An RCA2 object.}

\item{annotation}{An ontology dataset that can be obtained from bioconductor.}

\item{ontology}{Either MF, BP, or CC (default BP).}

\item{p.Val}{p-value cut-off (default 0.05).}

\item{q.Val}{q-value cut-off (default 0.2).}

\item{p.Adjust.Method}{p-value adjustment method to be used (default BH)}

\item{gene.label.type}{Type of gene.labels used (default SYMBOL)}

\item{filename}{postfix of the plots generated (GoEnrichment.pdf)}

\item{background.set, }{ALL indicates that all genes are considered, CLUSTER indicates that only genes with the cluster of interest are considered (default ALL).}

\item{background.set.threshold, }{minimum expression threshold used for mean gene-expression. Either a numerical value or one of the following thresholds computed on the mean gene-expression values across all genes within a considered cluster: Min, 1stQ, Mean, Median, 3rdQ (default NULL).}

\item{n.Cells.Expressed}{Alternative threshold to filter genes. Keep only genes that are expressed in at least n.Cells.Expressed cells (default NULL).}

\item{cluster.ID}{ID of a cluster for which the GO enrichment should be computed. If this is not provided, enrichment will be computed for all clusters (default NULL).}

\item{deep.split}{Deep.split to be used if hierarchical clustering was used to cluster the reference projection (deepsplit NULL).}
}
\description{
Perform GO enrichment analysis using cluster profiler.
}
\examples{
\dontrun{
RCA.pbmcs <- createRCAObject(RCAv2::pbmc_small_counts)
RCA.pbmcs <- dataLogNormalise(RCA.pbmcs)
RCA.pbmcs <- dataProject(RCA.pbmcs, method = "GlobalPanel_CellTypes")
RCA.pbmcs <- dataClust(RCA.pbmcs)
doEnrichGo(RCA.pbmcs,annotation = org.Hs.eg.db, deep.split = 1,
filename = "PBMC_RCA2_Go_Enrichment.pdf")
}

}
